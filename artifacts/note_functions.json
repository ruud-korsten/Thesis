{
  "Patient_ID should be checked for outliers since it is numeric.": "def check_patient_id_outliers(df):\n    try:\n        numeric_ids = df['Patient_ID'].astype(float)\n        q1 = numeric_ids.quantile(0.25)\n        q3 = numeric_ids.quantile(0.75)\n        iqr = q3 - q1\n        lower_bound = q1 - 1.5 * iqr\n        upper_bound = q3 + 1.5 * iqr\n        return (numeric_ids < lower_bound) | (numeric_ids > upper_bound)\n    except:\n        return df['Patient_ID'].notna()",
  "Age values outside the 0-120 range should be flagged as invalid.": "def check_age_outside_valid_range(df):\n    return ~df['Age'].astype(float).between(0, 120, inclusive='both')"
}